{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"RegisterBodyAuthType": {
				"properties": {
					"password": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"lastname": {
						"type": "string"
					},
					"firstname": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"LoginBodyAuthType": {
				"properties": {
					"password": {
						"type": "string"
					},
					"email": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"ObjectId": {
				"type": "string"
			},
			"CreateBodyMenuType": {
				"properties": {
					"order": {
						"type": "number",
						"format": "double"
					},
					"title": {
						"type": "string"
					},
					"active": {
						"type": "boolean"
					},
					"path": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"UpdateBodyMenuType": {
				"properties": {
					"order": {
						"type": "number",
						"format": "double"
					},
					"title": {
						"type": "string"
					},
					"active": {
						"type": "boolean"
					},
					"path": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"UserRole": {
				"enum": [
					"admin",
					"user"
				],
				"type": "string"
			},
			"CreateBodyUsersType": {
				"properties": {
					"role": {
						"$ref": "#/components/schemas/UserRole"
					},
					"password": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"lastname": {
						"type": "string"
					},
					"firstname": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"LiteralsBoolean": {
				"enum": [
					"true",
					"false"
				],
				"type": "string"
			},
			"UpdateBodyUsersType": {
				"properties": {
					"active": {
						"$ref": "#/components/schemas/LiteralsBoolean"
					},
					"role": {
						"$ref": "#/components/schemas/UserRole"
					},
					"password": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"lastname": {
						"type": "string"
					},
					"firstname": {
						"type": "string"
					}
				},
				"type": "object"
			}
		},
		"securitySchemes": {
			"bearerAuth": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			}
		}
	},
	"info": {
		"title": "back-personal-web-mern",
		"version": "1.0.0",
		"description": "- [Get the Project](#get-the-project)\r - [Project Dependencies](#project-dependencies)\r - [Project Scripts](#project-scripts)\r - [Environment Variables](#environment-variables)\r - [Authors ](#authors )\r - [License](#license)",
		"license": {
			"name": "ISC"
		},
		"contact": {
			"name": "S.U."
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/auth/register": {
			"post": {
				"operationId": "RegisterUser",
				"responses": {
					"200": {
						"description": "Message informing if create was correct",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Endpoint to create new user in database",
				"tags": [
					"AuthController"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "new user parameters (required)",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/RegisterBodyAuthType",
								"description": "new user parameters (required)"
							}
						}
					}
				}
			}
		},
		"/auth/login": {
			"post": {
				"operationId": "LoginUser",
				"responses": {
					"200": {
						"description": "Message with jwt access token and jwt refresh token",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"refreshToken": {},
										"accessToken": {}
									},
									"required": [
										"refreshToken",
										"accessToken"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Endpoint to auth with login a user in database",
				"tags": [
					"AuthController"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "credentials of the user to log in (required)",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/LoginBodyAuthType",
								"description": "credentials of the user to log in (required)"
							}
						}
					}
				}
			}
		},
		"/auth/refresh": {
			"post": {
				"operationId": "RefreshAccessToken",
				"responses": {
					"200": {
						"description": "Message with a new jwt access token",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"accessToken": {}
									},
									"required": [
										"accessToken"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Endpoint to refresh the token of a previously logged in user",
				"tags": [
					"AuthController"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "Valid Refresh token",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "string",
								"description": "Valid Refresh token"
							}
						}
					}
				}
			}
		},
		"/menu": {
			"get": {
				"operationId": "GetMenu",
				"responses": {
					"200": {
						"description": "Information of all menus with or without filters",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"allOf": [
											{
												"$ref": "#/components/schemas/IMenu"
											},
											{
												"properties": {
													"_id": {
														"$ref": "#/components/schemas/ObjectId"
													}
												},
												"required": [
													"_id"
												],
												"type": "object"
											}
										]
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Endpoint to obtain the data of menus from database",
				"tags": [
					"MenuController"
				],
				"security": [],
				"parameters": [
					{
						"description": "active menus filter you want to get (true or false) (Optional)",
						"in": "query",
						"name": "active",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateMenu",
				"responses": {
					"200": {
						"description": "Data of the new menu",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/IMenu"
										},
										{
											"properties": {
												"_id": {
													"$ref": "#/components/schemas/ObjectId"
												}
											},
											"required": [
												"_id"
											],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"description": "Endpoint to create menu from database",
				"tags": [
					"MenuController"
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [],
				"requestBody": {
					"description": "parameter to new menu (required)",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateBodyMenuType",
								"description": "parameter to new menu (required)"
							}
						}
					}
				}
			}
		},
		"/menu/{id}": {
			"patch": {
				"operationId": "UpdateMenu",
				"responses": {
					"200": {
						"description": "Message informing if update was correct",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Endpoint to partially update menu information from the database",
				"tags": [
					"MenuController"
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"description": "identifier of the menu to modify (required)",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "parameters of the menu to modify (Optional)",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateBodyMenuType",
								"description": "parameters of the menu to modify (Optional)"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteMenu",
				"responses": {
					"200": {
						"description": "Message informing if delete was correct",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Endpoint to delete menu information from the database",
				"tags": [
					"MenuController"
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"description": "identifier of the menu to delete (required)",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/users/me": {
			"get": {
				"operationId": "GetMe",
				"responses": {
					"200": {
						"description": "Data of the user making the request",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/IUser"
										},
										{
											"properties": {
												"_id": {
													"$ref": "#/components/schemas/ObjectId"
												}
											},
											"required": [
												"_id"
											],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"description": "Endpoint to obtain the data of the user making the request",
				"tags": [
					"UserController"
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": []
			}
		},
		"/users": {
			"get": {
				"operationId": "GetUsers",
				"responses": {
					"200": {
						"description": "Information of all users with or without filters",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"allOf": [
											{
												"$ref": "#/components/schemas/IUser"
											},
											{
												"properties": {
													"_id": {
														"$ref": "#/components/schemas/ObjectId"
													}
												},
												"required": [
													"_id"
												],
												"type": "object"
											}
										]
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Endpoint to obtain the data of users from database",
				"tags": [
					"UserController"
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"description": "active users filter you want to get (true or false) (Optional)",
						"in": "query",
						"name": "active",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateUser",
				"responses": {
					"200": {
						"description": "Message informing if create was correct",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Endpoint to create users in datatbase",
				"tags": [
					"UserController"
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [],
				"requestBody": {
					"description": "new user parameters (required)",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateBodyUsersType",
								"description": "new user parameters (required)"
							}
						}
					}
				}
			}
		},
		"/users/{id}": {
			"patch": {
				"operationId": "UpdateUser",
				"responses": {
					"200": {
						"description": "Message informing if update was correct",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Endpoint to partially update user information from the database",
				"tags": [
					"UserController"
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"description": "identifier of the user to modify (required)",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "parameters of the user to modify (optional)",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateBodyUsersType",
								"description": "parameters of the user to modify (optional)"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteUser",
				"responses": {
					"200": {
						"description": "Message informing if delete was correct",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Endpoint to delete a user from the database",
				"tags": [
					"UserController"
				],
				"security": [
					{
						"bearerAuth": []
					}
				],
				"parameters": [
					{
						"description": "identifier of the user to delete (required)",
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/api"
		}
	]
}